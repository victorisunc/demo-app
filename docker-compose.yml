version: '3.7'

services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: demo-app-server # Use an image built from the specified dockerfile in the `demo-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_PROFILES_ACTIVE: development
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
    volumes:
      - ./demo-app-server/logs:/logs # we want the app-server to log into the demo-app-server/logs host folder
    logging:
      driver: json-file

  # Frontend Service
  app-client:
    build:
      context: demo-app-client # Use an image built from the specified dockerfile in the `demo-app-client` directory.
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:8080
    ports:
      - "80:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  
    logging:
      driver: json-file

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: demo
      MYSQL_USER: username
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d/:ro # sets up 'demo' database
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    